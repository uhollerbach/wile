(define (run-cmd-or-die retry? cmd)
  (write-string "@@@@@ " cmd "\n")
  (unless (zero? (run-command cmd))
    (fprintf stderr "command %s failed!\n" cmd)
    (if retry?
	(let ((cmv (string-append cmd " -v")))
	  (unless (zero? (run-command cmv))
	    (fprintf stderr "command %s failed!\n" cmv)
	    (if retry?
		(let ((cmvv (string-append cmv " -v")))
		  (unless (zero? (run-command cmvv))
		    (fprintf stderr "command %s failed!\n" cmvv)
		    (exit 1)))
		(exit 1))))
	(exit 1))))

(define (rm-file-or-chirp file)
  (write-string "@@@@@ rm " file "\n")
  (when (file-exists? file)
    (unless (remove-file file)
      (fprintf stderr "rm-file %s failed!\n" file))))

(define (rename-file-or-die file1 file2)
  (write-string "@@@@@ mv " file1 " " file2 "\n")
  (unless (rename-file file1 file2)
    (fprintf stderr "rename-file %s -> %s failed!\n" file1 file2)
    (exit 1)))

(define (symlink-or-die file)
  (write-string "@@@@@ rm wile\n")
  (remove-file "wile")
  (write-string "@@@@@ ln -s " file " wile\n")
  (unless (create-symbolic-link file "wile")
    (fprintf stderr "symlink %s -> wile failed!\n" file)
    (exit 1)))

(define (make-stage n)
  (let* ((scur (string-append "stage" (number->string n)))
	 (name1-exe (string-append "wilec." scur))
	 (name2-exe (string-append "wilec-dbg." scur))
	 (name-c (string-append "wilec." scur ".c"))
	 (name1-lib (string-append "libwrtl." scur ".a"))
	 (name2-lib (string-append "libwrtl-dbg." scur ".a")))
    (write-string "######## make " scur "\n")
    (run-cmd-or-die #f "make realclean")
    (run-cmd-or-die #t "wile -c -rm-uv wile-rtl2.scm wile-rtl2.c")
    (run-cmd-or-die #f "rm -rf bld-rtl-dir")
    (run-cmd-or-die #f "build-rtl libwrtl.a wile-sql.c alloc.c print.c location.c wile-parse.c wile-lex.c swll-cfft.c continuations.c fsi_set.c nfa.c regex.c ulexlib.c -s wile-rtl1.c wile-rtl2.scm math-funcs.c")
    (run-cmd-or-die #f "nm -a libwrtl.a | grep wile_config")

    (run-cmd-or-die #f "rm -rf bld-rtl-dir")
    (run-cmd-or-die #f "build-rtl -g libwrtl-dbg.a wile-sql.c alloc.c print.c location.c wile-parse.c wile-lex.c swll-cfft.c continuations.c fsi_set.c nfa.c regex.c ulexlib.c -s wile-rtl1.c wile-rtl2.scm math-funcs.c")
    (run-cmd-or-die #f "nm -a libwrtl-dbg.a | grep wile_config")

    (run-cmd-or-die #t "wile -c -rm-uv wile-main.scm wilec.c")
    (run-cmd-or-die #t "wile -x wilec.c wilec")
    (run-cmd-or-die #t "wile -x -g wilec.c wilec-dbg")
    (rm-file-or-chirp "wile")
    (rm-file-or-chirp name1-exe)
    (rm-file-or-chirp name-c)
    (rename-file-or-die "wilec.c" name-c)
    (rename-file-or-die "wilec" name1-exe)
    (rename-file-or-die "wilec-dbg" name2-exe)
    (rename-file-or-die "libwrtl.a" name1-lib)
    (rename-file-or-die "libwrtl-dbg.a" name2-lib)
    (symlink-or-die name1-exe)))

(write-string "######## setup\n")

(when (or (file-exists? "wilec") (file-exists? "wilec.c"))
  (raise "build-stages: wilec and/or wilec.c exist!"))
(symlink-or-die (if (and (not (null? command-line-arguments))
			 (file-executable? (car command-line-arguments)))
		    (car command-line-arguments)
		    "wile-wrap.scm"))

(make-stage 1)
(make-stage 2)
(make-stage 3)

(write-string "######## compare\n")
(run-cmd-or-die #f "md5sum wilec.stage[123].c")
(run-cmd-or-die #f "md5sum wilec.stage[123]")
(run-cmd-or-die #f "md5sum wilec-dbg.stage[123]")
(run-cmd-or-die #f "md5sum libwrtl.stage[123].a")
(run-cmd-or-die #f "md5sum libwrtl-dbg.stage[123].a")
