;;; redo test_21, but using sprintf

(let ((s (sprintf "char %c string >>%s<< percent %% 10 percent %10% thang %v\n"
		  #\G "foo" (cons 3 'a))))
  (write-1str stdout s))
(let ((s (sprintf "string %l20s\n" "foo")))
  (write-1str stdout s))
(let ((s (sprintf "string %m20s\n" "bar")))
  (write-1str stdout s))
(let ((s (sprintf "string %r20s\n" "baz")))
  (write-1str stdout s))

(let ((s (sprintf "b-int %l20b\n" 10)))
  (write-1str stdout s))
(let ((s (sprintf "b-int %m20b\n" 11)))
  (write-1str stdout s))
(let ((s (sprintf "b-int %r20b\n" 12)))
  (write-1str stdout s))
(let ((s (sprintf "b-int %l20b\n" -10)))
  (write-1str stdout s))
(let ((s (sprintf "b-int %m20b\n" -11)))
  (write-1str stdout s))
(let ((s (sprintf "b-int %r20b\n" -12)))
  (write-1str stdout s))
(let ((s (sprintf "b-int %l 20b\n" 10)))
  (write-1str stdout s))
(let ((s (sprintf "b-int %m 20b\n" 11)))
  (write-1str stdout s))
(let ((s (sprintf "b-int %r 20b\n" 12)))
  (write-1str stdout s))
(let ((s (sprintf "b-int %l+20b\n" 10)))
  (write-1str stdout s))
(let ((s (sprintf "b-int %m+20b\n" 11)))
  (write-1str stdout s))
(let ((s (sprintf "b-int %r+20b\n" 12)))
  (write-1str stdout s))

(let ((s (sprintf "x-int %x\n" 1234567)))
  (write-1str stdout s))
(let ((s (sprintf "x-int %+x\n" 1234567)))
  (write-1str stdout s))
(let ((s (sprintf "x-int % x\n" 1234567)))
  (write-1str stdout s))
(let ((s (sprintf "x-int %x\n" -1234567)))
  (write-1str stdout s))
(let ((s (sprintf "x-int %+x\n" -1234567)))
  (write-1str stdout s))
(let ((s (sprintf "x-int % x\n" -1234567)))
  (write-1str stdout s))

(let ((s (sprintf "d-int %l20d\n" 10)))
  (write-1str stdout s))
(let ((s (sprintf "d-int %m20d\n" 11)))
  (write-1str stdout s))
(let ((s (sprintf "d-int %r20d\n" 12)))
  (write-1str stdout s))
(let ((s (sprintf "d-int %l20d\n" -10)))
  (write-1str stdout s))
(let ((s (sprintf "d-int %m20d\n" -11)))
  (write-1str stdout s))
(let ((s (sprintf "d-int %r20d\n" -12)))
  (write-1str stdout s))
(let ((s (sprintf "d-int %l 20d\n" 10)))
  (write-1str stdout s))
(let ((s (sprintf "d-int %m 20d\n" 11)))
  (write-1str stdout s))
(let ((s (sprintf "d-int %r 20d\n" 12)))
  (write-1str stdout s))
(let ((s (sprintf "d-int %l+20d\n" 10)))
  (write-1str stdout s))
(let ((s (sprintf "d-int %m+20d\n" 11)))
  (write-1str stdout s))
(let ((s (sprintf "d-int %r+20d\n" 12)))
  (write-1str stdout s))

(let ((s (sprintf "now it is %b o'clock... or 43%% of the HoP if you %v\n" 13 "insist")))
  (write-1str stdout s))
(let ((s (sprintf "now I will %c%c%c%c%c sleep\n" #\g #\o #\space #\t #\o)))
  (write-1str stdout s))
(let ((s (sprintf "float %l20.4e\n" 1.3)))
  (write-1str stdout s))
(let ((s (sprintf "float %m20.4e\n" 1.3)))
  (write-1str stdout s))
(let ((s (sprintf "float %r20.4e\n" 1.3)))
  (write-1str stdout s))
(let ((s (sprintf "float %l 20.4e\n" 1.3)))
  (write-1str stdout s))
(let ((s (sprintf "float %m 20.4e\n" 1.3)))
  (write-1str stdout s))
(let ((s (sprintf "float %r 20.4e\n" 1.3)))
  (write-1str stdout s))
(let ((s (sprintf "float %l 20.4e\n" -1.3)))
  (write-1str stdout s))
(let ((s (sprintf "float %m 20.4e\n" -1.3)))
  (write-1str stdout s))
(let ((s (sprintf "float %r 20.4e\n" -1.3)))
  (write-1str stdout s))

(let ((s (sprintf "%r1s\n" #\o)))
  (write-1str stdout s))
(let ((s (sprintf "%r2s\n" #\o)))
  (write-1str stdout s))
(let ((s (sprintf "%r3s\n" #\o)))
  (write-1str stdout s))
(let ((s (sprintf "%r4s\n" #\o)))
  (write-1str stdout s))
(let ((s (sprintf "%r5s\n" #\o)))
  (write-1str stdout s))
(let ((s (sprintf "%r6s\n" #\o)))
  (write-1str stdout s))
(let ((s (sprintf "%r7s\n" #\o)))
  (write-1str stdout s))
(let ((s (sprintf "%r8s\n" #\o)))
  (write-1str stdout s))
(let ((s (sprintf "%r9s\n" #\o)))
  (write-1str stdout s))
(let ((s (sprintf "%r9sooohlala!\n" #\space)))
  (write-1str stdout s))
