;;; test file for compiler

(define const1 "yowza!")
(define const2 (string-upcase "yowzaaaa!"))
(define const3 const1)

(define (fn0)
  (write-string "calling fn0 ")
  (display const1)
  (newline)
  (display const3)
  (newline))

(define (fn1 arg1)
  (write-string "calling fn1 ")
  (display arg1)
  (newline)
  (fn0))

(write-string "# defined fn1")
(newline)

;;; (load-library "queue.scm")

(define (fn2 arg1 arg2)
  (write-string "calling fn2 ")
  (display arg1)
  (write-string #\space)
  (display arg2)
  (newline)
  (fn1 arg2)
  (fn1 "c-string"))

(write-string "# defined fn2")
(newline)

(define (fn3 arg1 arg2 arg3)
  (write-string "calling fn3 ")
  (display arg1)
  (write-string #\space)
  (display arg2)
  (write-string #\space)
  (display arg3)
  (newline)
  (fn2 arg1 arg3)
  (fn2 "c-string1" arg2))

(write-string "# defined fn3")
(newline)

(define (fn4 arg1 arg2 arg3 . args)
  (write-string "calling fn4(")
  (display arg1)
  (write-string #\space)
  (display arg2)
  (write-string #\space)
  (display arg3)
  (write-string #\space)
  (write-string " . ")
  (display args)
  (write-string ")")
  (newline)
  (fn2 arg1 arg3)
  (fn2 "c-string1" arg2))

(define (fn5 . args)
  (write-string "calling fn5( . ")
  (display args)
  (write-string ")")
  (newline))

(write-string "# defined fn4")
(newline)

(fn1 "arg1-1")
(fn2 "arg2-1" "arg2-2")
(fn3 "arg3-1" "arg3-2" "arg3-3")
(fn4 "arg4-1" "arg4-2" "arg4-3")
(fn4 "arg4-1" "arg4-2" "arg4-3" "arg4-s1")
(fn4 "arg4-1" "arg4-2" "arg4-3" "arg4-s1" "arg4-s2")
(fn4 "arg4-1" "arg4-2" "arg4-3" "arg4-s1" "arg4-s2" "arg4-s3")
(fn5)
(fn5 "arg5-s1")
(fn5 "arg5-s1" "arg5-s2")
(fn5 "arg5-s1" "arg5-s2" "arg5-s3")
(write-string "It's alive! IT'S ALIIIVE!!!")
(newline)
(write-string const2)
(newline)

(write-string "we have been invoked as:")
(newline)
(write-string command-name)
(until (null? command-line-arguments)
       (write-string #\space)
       (write-string (car command-line-arguments))
       (set! command-line-arguments (cdr command-line-arguments)))
(newline)
